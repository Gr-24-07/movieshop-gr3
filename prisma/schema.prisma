
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Movie {
    id           Int          @id @default(autoincrement())
    title        String
    overview     String
    release_date Int
    poster_path  String
    genres       MovieGenre[]

    cartItems    CartItem[]
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @default(now())
    price        Int

    OrderItem OrderItem[]
}

model Genre {
    id     Int          @id @default(autoincrement())
    name   String       @unique
    movies MovieGenre[]
}

model MovieGenre {
    movieId Int
    genreId Int
    movies  Movie @relation(fields: [movieId], references: [id])
    genres  Genre @relation(fields: [genreId], references: [id])

    @@id([movieId, genreId])
}

// ############## USERS  MODEL ##########################

enum Role {
    CUSTOMER
    ADMIN
}

model User {
    id        String     @id @default(cuid())
    name      String
    email     String     @unique
    image     String?
    password  String
    role      Role       @default(CUSTOMER)
    cart      Cart?     
    cartId    Int?
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt

    Order Order[]
}

// ############## END USERS  MODEL ##########################

// ############## Cart  MODEL ##########################
model Cart {

    id        Int        @id @default(autoincrement())
    userId    String     @unique
    user      User       @relation(fields: [userId], references: [id])
    items     CartItem[]
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
}

model CartItem {
    id        Int         @id @default(autoincrement())
    movieId   Int
    quantity  Int
    movie     Movie       @relation(fields: [movieId], references: [id])
    price     Int
    cartId    Int
    cart      Cart        @relation(fields: [cartId], references: [id])
    poster_path String?   
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt

    @@unique([movieId, cartId])
}

// ############## END Cart  MODEL ########################


model Order {
    id          Int         @id @default(autoincrement())
    userId      String
    totalAmount Int
    status      Status
    orderDate   DateTime    @default(now())
    user        User        @relation(fields: [userId], references: [id])
    orderItems  OrderItem[]
}

model OrderItem {
    id              Int   @id @default(autoincrement())
    orderId         Int
    movieId         Int
    quantity        Int
    priceAtPurchase Int
    order           Order @relation(fields: [orderId], references: [id])
    movie           Movie @relation(fields: [movieId], references: [id])
}

enum Status {
    PENDING
    CANCELLED
    SHIPPED
    COMPLETED
}

